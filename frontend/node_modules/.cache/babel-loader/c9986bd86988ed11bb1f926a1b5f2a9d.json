{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _velocityAnimate = require('velocity-animate');\n\nvar _velocityAnimate2 = _interopRequireDefault(_velocityAnimate);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nrequire('pdfjs-dist/webpack');\n\nrequire('pdfjs-dist/web/compatibility');\n\nvar _Viewport = require('./lib/Viewport');\n\nvar _Viewer = require('./components/Viewer');\n\nvar _Viewer2 = _interopRequireDefault(_Viewer);\n\nvar _ThumbnailViewer = require('./components/ThumbnailViewer');\n\nvar _ThumbnailViewer2 = _interopRequireDefault(_ThumbnailViewer);\n\nvar _ToolsBar = require('./components/ToolsBar');\n\nvar _ToolsBar2 = _interopRequireDefault(_ToolsBar);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _window = window,\n    PDFJS = _window.PDFJS;\n\nvar PDFReader = function (_Component) {\n  _inherits(PDFReader, _Component);\n\n  function PDFReader(props) {\n    _classCallCheck(this, PDFReader);\n\n    var _this = _possibleConstructorReturn(this, (PDFReader.__proto__ || Object.getPrototypeOf(PDFReader)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var scale = props.scale,\n        currentPage = props.currentPage;\n    _this.state = {\n      pdf: {},\n      pages: [],\n      isLoading: true,\n      currentPage: currentPage,\n      scale: scale,\n      thumbnailsViewOpen: true\n    };\n    return _this;\n  }\n\n  _createClass(PDFReader, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this.loadDocument(this.props.file);\n    }\n    /**\n     * Called when a document is loaded successfully.\n     */\n\n    /**\n       * Called when a document fails to load.\n       */\n\n    /**\n     * Load document\n     * @param {*} args\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _state2 = this.state,\n          pages = _state2.pages,\n          isLoading = _state2.isLoading,\n          currentPage = _state2.currentPage,\n          scale = _state2.scale,\n          thumbnailsViewOpen = _state2.thumbnailsViewOpen,\n          pdf = _state2.pdf;\n      var _props = this.props,\n          width = _props.width,\n          rotate = _props.rotate,\n          btnToggle = _props.btnToggle,\n          btnUp = _props.btnUp,\n          btnDown = _props.btnDown,\n          btnZoomIn = _props.btnZoomIn,\n          btnZoomOut = _props.btnZoomOut,\n          btnFitWidth = _props.btnFitWidth,\n          loadingLabel = _props.loadingLabel,\n          pageCountLabel = _props.pageCountLabel,\n          renderType = _props.renderType;\n      return _react2.default.createElement('div', {\n        className: (0, _classnames2.default)('pdf-reader', {\n          'tumbnails-open': thumbnailsViewOpen\n        })\n      }, isLoading ? _react2.default.createElement('div', {\n        className: 'pdf-loading'\n      }, _react2.default.createElement('h3', null, loadingLabel)) : _react2.default.createElement('div', null, _react2.default.createElement(_ToolsBar2.default, {\n        btnToggle: btnToggle,\n        toggleHandler: this.toggleThumbnailsView,\n        btnUp: btnUp,\n        btnDown: btnDown,\n        scrollToPageHandler: this.scrollToPage,\n        btnZoomIn: btnZoomIn,\n        btnZoomOut: btnZoomOut,\n        btnFitWidth: btnFitWidth,\n        zoomHandler: this.zoom,\n        currentPage: currentPage,\n        numPages: pdf.numPages,\n        pageCountLabel: pageCountLabel\n      }), _react2.default.createElement(_ThumbnailViewer2.default, {\n        pages: pages,\n        currentPage: currentPage,\n        onSelect: this.scrollToPage\n      }), _react2.default.createElement(_Viewer2.default, {\n        pages: pages,\n        onPageChange: this.changePage,\n        scale: scale,\n        rotate: rotate,\n        width: width,\n        renderType: renderType\n      })));\n    }\n  }]);\n\n  return PDFReader;\n}(_react.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.onDocumentLoad = function (pdf) {\n    _this2.setState({\n      pdf: pdf\n    });\n\n    _this2.loadFirstPage();\n  };\n\n  this.onDocumentError = function (error) {\n    _this2.setState({\n      pdf: false\n    });\n\n    throw new Error(error);\n  };\n\n  this.onViewerLoaded = function () {\n    var onViewLoadComplete = _this2.props.onViewLoadComplete;\n\n    if (onViewLoadComplete) {\n      onViewLoadComplete();\n    }\n  };\n\n  this.loadDocument = function () {\n    PDFJS.getDocument.apply(PDFJS, arguments).then(_this2.onDocumentLoad).catch(_this2.onDocumentError);\n  };\n\n  this.scrollToPage = function (pageIndex) {\n    var page = document.getElementById('pdf-page-' + pageIndex);\n    var context = document.querySelector('.pdf-viewer');\n    (0, _velocityAnimate2.default)(page, 'scroll', {\n      container: context,\n      duration: 0,\n      queue: false\n    });\n  };\n\n  this.changePage = function (pageIndex) {\n    _this2.setState({\n      currentPage: pageIndex\n    });\n  };\n\n  this.zoom = function (direction) {\n    var _state3 = _this2.state,\n        scale = _state3.scale,\n        pages = _state3.pages;\n    var container = document.querySelector('.pdf-viewer');\n    _this2.minZoomScale = (0, _Viewport.getMinZoomScale)(pages[0], container);\n\n    switch (direction) {\n      case 'in':\n        _this2.setState({\n          scale: scale + 0.1\n        });\n\n        break;\n\n      case 'out':\n        _this2.setState(function (_state) {\n          return {\n            scale: _state.scale - 0.1 > _this2.minZoomScale ? _state.scale - 0.1 : _this2.minZoomScale\n          };\n        });\n\n        break;\n\n      case 'fitWidth':\n        _this2.setState({\n          scale: (0, _Viewport.getFitWidthScale)(pages[0], container)\n        });\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  this.loadFirstPage = function () {\n    var pdf = _this2.state.pdf;\n    pdf.getPage(1).then(function (page) {\n      _this2.setState({\n        pages: [page]\n      }, function () {\n        _this2.setState({\n          isLoading: false\n        });\n\n        _this2.loadPages(pdf, 2);\n      });\n    });\n  };\n\n  this.loadPages = function (pdf, pageIndex) {\n    if (pageIndex <= pdf.numPages) {\n      pdf.getPage(pageIndex).then(function (page) {\n        _this2.setState(function (_state) {\n          return {\n            pages: [].concat(_toConsumableArray(_state.pages), [page])\n          };\n        });\n\n        _this2.loadPages(pdf, pageIndex + 1);\n      });\n    } else {\n      _this2.onViewerLoaded();\n    }\n  };\n\n  this.toggleThumbnailsView = function () {\n    _this2.setState(function (_state) {\n      return {\n        thumbnailsViewOpen: !_state.thumbnailsViewOpen\n      };\n    });\n  };\n};\n\nPDFReader.defaultProps = {\n  rotate: 0,\n  scale: 1,\n  renderType: 'canvas',\n  currentPage: 0,\n  btnToggle: {\n    label: 'toggle panel'\n  },\n  btnUp: {\n    label: 'Up'\n  },\n  btnDown: {\n    label: 'Down'\n  },\n  btnZoomIn: {\n    label: 'Zoom In'\n  },\n  btnZoomOut: {\n    label: 'Zoom Out'\n  },\n  btnFitWidth: {\n    label: 'Fit Width'\n  },\n  loadingLabel: 'PDF Document Loading ...',\n  pageCountLabel: 'in',\n  onViewLoadComplete: null\n};\nPDFReader.propTypes = {\n  file: _propTypes2.default.string,\n  rotate: _propTypes2.default.number,\n  renderType: _propTypes2.default.string,\n  currentPage: _propTypes2.default.number,\n  scale: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  width: _propTypes2.default.number,\n  btnToggle: _propTypes2.default.oneOfType([_propTypes2.default.shape({\n    label: _propTypes2.default.string,\n    classname: _propTypes2.default.string,\n    iconClassname: _propTypes2.default.string,\n    iconButton: _propTypes2.default.bool\n  }), _propTypes2.default.element]),\n  btnUp: _propTypes2.default.oneOfType([_propTypes2.default.shape({\n    label: _propTypes2.default.string,\n    classname: _propTypes2.default.string,\n    iconClassname: _propTypes2.default.string,\n    iconButton: _propTypes2.default.bool\n  }), _propTypes2.default.element]),\n  btnDown: _propTypes2.default.oneOfType([_propTypes2.default.shape({\n    label: _propTypes2.default.string,\n    classname: _propTypes2.default.string,\n    iconClassname: _propTypes2.default.string,\n    iconButton: _propTypes2.default.bool\n  }), _propTypes2.default.element]),\n  btnZoomIn: _propTypes2.default.oneOfType([_propTypes2.default.shape({\n    label: _propTypes2.default.string,\n    classname: _propTypes2.default.string,\n    iconClassname: _propTypes2.default.string,\n    iconButton: _propTypes2.default.bool\n  }), _propTypes2.default.element]),\n  btnZoomOut: _propTypes2.default.oneOfType([_propTypes2.default.shape({\n    label: _propTypes2.default.string,\n    classname: _propTypes2.default.string,\n    iconClassname: _propTypes2.default.string,\n    iconButton: _propTypes2.default.bool\n  }), _propTypes2.default.element]),\n  btnFitWidth: _propTypes2.default.oneOfType([_propTypes2.default.shape({\n    label: _propTypes2.default.string,\n    classname: _propTypes2.default.string,\n    iconClassname: _propTypes2.default.string,\n    iconButton: _propTypes2.default.bool\n  }), _propTypes2.default.element]),\n  loadingLabel: _propTypes2.default.string,\n  pageCountLabel: _propTypes2.default.string,\n  onViewLoadComplete: _propTypes2.default.func\n};\nexports.default = PDFReader;","map":null,"metadata":{},"sourceType":"script"}