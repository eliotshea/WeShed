{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\WeShed\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\WeShed\\\\frontend\\\\src\\\\Router.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\nimport App from './App';\nimport Login from './Login';\nimport Home from './Home';\nimport Auth from './Auth';\n\nconst Router = props => React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/Login\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}), React.createElement(PrivateRoute, {\n  path: \"/Home\",\n  component: Home,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}));\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => Auth.getAuth() ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: \"/\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nexport default Router;","map":{"version":3,"sources":["C:\\Users\\Admin\\Documents\\GitHub\\WeShed\\frontend\\src\\Router.js"],"names":["React","Component","Switch","Route","Redirect","Link","App","Login","Home","Auth","Router","props","PrivateRoute","component","rest","getAuth","pathname"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,IAAlC,QAA8C,kBAA9C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IACX,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACD,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAEJ,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADC,EAEE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,QAAlB;AAA2B,EAAA,SAAS,EAAEA,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAC,OAAnB;AAA2B,EAAA,SAAS,EAAEC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CADJ;;AASA,MAAMI,YAAY,GAAG;AAAA,MAAcX,SAAd,QAAGY,SAAH;AAAA,MAA4BC,IAA5B;;AAAA,SACnB,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAEH,KAAK,IACXF,IAAI,CAACM,OAAL,KACE,oBAAC,SAAD,oBAAeJ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,GAGE,oBAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFK,QAAAA,QAAQ,EAAE;AADR,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADmB;AAAA,CAArB;;AAkBA,eAAeN,MAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\r\nimport App from './App';\r\nimport Login from './Login';\r\nimport Home from './Home';\r\nimport Auth from './Auth';\r\n\r\nconst Router = (props) => (\r\n    <Switch>\r\n\t  <Route exact path='/' component={Login}/>\r\n      <Route exact path='/Login' component={Login}/>\r\n      <PrivateRoute path=\"/Home\" component={Home} />\r\n\t  \r\n    </Switch>\r\n)\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      Auth.getAuth() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/\"\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\n\r\nexport default Router;"]},"metadata":{},"sourceType":"module"}