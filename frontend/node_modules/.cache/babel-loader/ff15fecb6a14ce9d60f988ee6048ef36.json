{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nrequire('pdfjs-dist/build/pdf.combined');\n\nrequire('pdfjs-dist/web/compatibility');\n\nrequire('waypoints/lib/noframework.waypoints');\n\nrequire('waypoints/lib/shortcuts/inview');\n\nvar _Viewport = require('../lib/Viewport');\n\nvar _TextLayerBuilder = require('../lib/TextLayerBuilder');\n\nvar _TextLayerBuilder2 = _interopRequireDefault(_TextLayerBuilder);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _window = window,\n    PDFJS = _window.PDFJS,\n    Waypoint = _window.Waypoint;\n\nvar Page = function (_Component) {\n  _inherits(Page, _Component);\n\n  function Page(props) {\n    _classCallCheck(this, Page);\n\n    var _this = _possibleConstructorReturn(this, (Page.__proto__ || Object.getPrototypeOf(Page)).call(this, props));\n\n    _this.getViewport = function () {\n      var page = _this.props.page;\n      var scale = _this.state.scale;\n      var rotate = _this.props.rotate || 0;\n      return (0, _Viewport.getViewport)(page, scale, rotate);\n    };\n\n    _this.refreshWaypoints = function () {\n      Waypoint.refreshAll();\n    };\n\n    _this.initWaypoint = function (pageHeight) {\n      var _this$props = _this.props,\n          page = _this$props.page,\n          onVisibleOnViewport = _this$props.onVisibleOnViewport;\n      var context = document.querySelector('.pdf-viewer');\n      _this.waypoints = [new Waypoint({\n        offset: pageHeight / 4,\n        element: _this._page,\n        context: context,\n        handler: function handler(direction) {\n          if (direction === 'down') {\n            onVisibleOnViewport(page.pageIndex);\n          }\n        }\n      }), new Waypoint({\n        offset: -pageHeight / 3,\n        element: _this._page,\n        context: context,\n        handler: function handler(direction) {\n          if (direction === 'up') {\n            onVisibleOnViewport(page.pageIndex);\n          }\n        }\n      }), new Waypoint.Inview({\n        element: _this._page,\n        context: context,\n        enter: function enter() {\n          _this.setState({\n            isInview: true\n          }, function () {\n            if (!_this.pageRendered) {\n              _this.renderPage();\n            } else if (_this.state.scaleChange) {\n              _this.setState({\n                scaleChange: false\n              }, function () {\n                _this.renderPage();\n              });\n            }\n          });\n        },\n        exited: function exited() {\n          _this.setState({\n            isInview: false\n          });\n        }\n      })];\n    };\n\n    _this.cleanPage = function () {\n      if (_this.props.renderType === 'svg') {\n        _this._svg.innerHTML = '';\n      } else {\n        var ctx = _this._canvas.getContext('2d');\n\n        ctx.clearRect(0, 0, _this._canvas.width, _this._canvas.height);\n      }\n    };\n\n    _this.initPage = function () {\n      var _this$getViewport = _this.getViewport(),\n          viewport = _this$getViewport.viewport,\n          viewportDefaultRatio = _this$getViewport.viewportDefaultRatio;\n\n      _this.renderPagePlaceholder(viewportDefaultRatio);\n\n      _this.initWaypoint(viewport.height);\n    };\n\n    _this.updatePage = function () {\n      _this.renderPagePlaceholder(_this.getViewport().viewportDefaultRatio);\n\n      _this.refreshWaypoints();\n\n      _this.cleanPage();\n\n      if (_this.state.isInview) {\n        _this.renderPage();\n      } else {\n        _this.setState({\n          scaleChange: true\n        });\n      }\n    };\n\n    _this.renderPage = function () {\n      var _this$props2 = _this.props,\n          page = _this$props2.page,\n          renderType = _this$props2.renderType;\n\n      var viewports = _this.getViewport();\n\n      var pixelRatio = window.devicePixelRatio || 1;\n\n      _this.renderPagePlaceholder(viewports.viewportDefaultRatio);\n\n      if (renderType === 'svg') {\n        _this.renderPageSVG(page, pixelRatio, viewports);\n      } else {\n        _this.renderPageCanvas(page, pixelRatio, viewports);\n      }\n\n      _this.renderTextLayer(page, viewports.viewportDefaultRatio);\n\n      _this.pageRendered = true;\n    };\n\n    _this.renderPagePlaceholder = function (viewportDefaultRatio) {\n      _this._page.style.width = viewportDefaultRatio.width + 'px';\n      _this._page.style.height = viewportDefaultRatio.height + 'px';\n    };\n\n    _this.renderPageSVG = function (page, pixelRatio, _ref) {\n      var viewportDefaultRatio = _ref.viewportDefaultRatio;\n      _this._svg.style.width = viewportDefaultRatio.width + 'px';\n      _this._svg.style.height = viewportDefaultRatio.height + 'px'; // SVG rendering by PDF.js\n\n      page.getOperatorList().then(function (opList) {\n        var svgGfx = new PDFJS.SVGGraphics(page.commonObjs, page.objs);\n        return svgGfx.getSVG(opList, viewportDefaultRatio);\n      }).then(function (svg) {\n        _this._svg.innerHTML = '';\n\n        _this._svg.appendChild(svg);\n      });\n    };\n\n    _this.renderPageCanvas = function (page, pixelRatio, _ref2) {\n      var viewport = _ref2.viewport;\n      _this._canvas.height = viewport.height;\n      _this._canvas.width = viewport.width;\n      _this._canvas.style.height = viewport.height / pixelRatio + 'px';\n      _this._canvas.style.width = viewport.width / pixelRatio + 'px';\n\n      var canvasContext = _this._canvas.getContext('2d');\n\n      var renderContext = {\n        canvasContext: canvasContext,\n        viewport: viewport\n      };\n\n      if (_this.pageRender && _this.pageRender._internalRenderTask.running) {\n        _this.pageRender._internalRenderTask.cancel();\n      }\n\n      _this.pageRender = page.render(renderContext);\n    };\n\n    _this.renderTextLayer = function (page, viewportDefaultRatio) {\n      if (_this._textContent) {\n        _this._textLayerDiv.innerHTML = '';\n        _this._textLayer = new _TextLayerBuilder2.default({\n          textLayerDiv: _this._textLayerDiv,\n          pageIndex: page.pageIndex,\n          viewport: viewportDefaultRatio\n        }); // Set text-fragments\n\n        _this._textLayer.setTextContent(_this._textContent); // Render text-fragments\n\n\n        _this._textLayer.render();\n      } else {\n        page.getTextContent().then(function (textContent) {\n          _this._textContent = textContent;\n          _this._textLayer = new _TextLayerBuilder2.default({\n            textLayerDiv: _this._textLayerDiv,\n            pageIndex: page.pageIndex,\n            viewport: viewportDefaultRatio\n          }); // Set text-fragments\n\n          _this._textLayer.setTextContent(textContent); // Render text-fragments\n\n\n          _this._textLayer.render();\n        });\n      }\n    };\n\n    _this.state = {\n      scale: props.scale,\n      isInview: false,\n      scaleChange: false\n    };\n    return _this;\n  }\n\n  _createClass(Page, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initPage();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      if (nextProps.scale !== this.state.scale) {\n        this.setState({\n          scale: nextProps.scale\n        }, function () {\n          _this2.updatePage(nextProps.scale);\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          page = _props.page,\n          renderType = _props.renderType;\n      return _react2.default.createElement('div', {\n        ref: function ref(div) {\n          return _this3._page = div;\n        },\n        className: 'pdf-page',\n        id: 'pdf-page-' + page.pageIndex\n      }, _react2.default.createElement('div', {\n        ref: function ref(div) {\n          return _this3._textLayerDiv = div;\n        },\n        className: 'textLayer'\n      }), renderType === 'svg' ? _react2.default.createElement('div', {\n        ref: function ref(div) {\n          return _this3._svg = div;\n        },\n        className: 'svg'\n      }) : _react2.default.createElement('canvas', {\n        ref: function ref(canvas) {\n          return _this3._canvas = canvas;\n        }\n      }));\n    }\n  }]);\n\n  return Page;\n}(_react.Component);\n\nPage.propTypes = {\n  scale: _propTypes2.default.number.isRequired,\n  renderType: _propTypes2.default.string.isRequired,\n  page: _propTypes2.default.object.isRequired,\n  onVisibleOnViewport: _propTypes2.default.func.isRequired,\n  rotate: _propTypes2.default.number.isRequired\n};\nexports.default = Page;","map":null,"metadata":{},"sourceType":"script"}