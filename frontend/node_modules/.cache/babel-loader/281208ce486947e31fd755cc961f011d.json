{"ast":null,"code":"/*!\nWaypoints Inview Shortcut - 4.0.1\nCopyright Â© 2011-2016 Caleb Troughton\nLicensed under the MIT license.\nhttps://github.com/imakewebthings/waypoints/blob/master/licenses.txt\n*/\n(function () {\n  'use strict';\n\n  function noop() {}\n\n  var Waypoint = window.Waypoint;\n  /* http://imakewebthings.com/waypoints/shortcuts/inview */\n\n  function Inview(options) {\n    this.options = Waypoint.Adapter.extend({}, Inview.defaults, options);\n    this.axis = this.options.horizontal ? 'horizontal' : 'vertical';\n    this.waypoints = [];\n    this.element = this.options.element;\n    this.createWaypoints();\n  }\n  /* Private */\n\n\n  Inview.prototype.createWaypoints = function () {\n    var configs = {\n      vertical: [{\n        down: 'enter',\n        up: 'exited',\n        offset: '100%'\n      }, {\n        down: 'entered',\n        up: 'exit',\n        offset: 'bottom-in-view'\n      }, {\n        down: 'exit',\n        up: 'entered',\n        offset: 0\n      }, {\n        down: 'exited',\n        up: 'enter',\n        offset: function () {\n          return -this.adapter.outerHeight();\n        }\n      }],\n      horizontal: [{\n        right: 'enter',\n        left: 'exited',\n        offset: '100%'\n      }, {\n        right: 'entered',\n        left: 'exit',\n        offset: 'right-in-view'\n      }, {\n        right: 'exit',\n        left: 'entered',\n        offset: 0\n      }, {\n        right: 'exited',\n        left: 'enter',\n        offset: function () {\n          return -this.adapter.outerWidth();\n        }\n      }]\n    };\n\n    for (var i = 0, end = configs[this.axis].length; i < end; i++) {\n      var config = configs[this.axis][i];\n      this.createWaypoint(config);\n    }\n  };\n  /* Private */\n\n\n  Inview.prototype.createWaypoint = function (config) {\n    var self = this;\n    this.waypoints.push(new Waypoint({\n      context: this.options.context,\n      element: this.options.element,\n      enabled: this.options.enabled,\n      handler: function (config) {\n        return function (direction) {\n          self.options[config[direction]].call(self, direction);\n        };\n      }(config),\n      offset: config.offset,\n      horizontal: this.options.horizontal\n    }));\n  };\n  /* Public */\n\n\n  Inview.prototype.destroy = function () {\n    for (var i = 0, end = this.waypoints.length; i < end; i++) {\n      this.waypoints[i].destroy();\n    }\n\n    this.waypoints = [];\n  };\n\n  Inview.prototype.disable = function () {\n    for (var i = 0, end = this.waypoints.length; i < end; i++) {\n      this.waypoints[i].disable();\n    }\n  };\n\n  Inview.prototype.enable = function () {\n    for (var i = 0, end = this.waypoints.length; i < end; i++) {\n      this.waypoints[i].enable();\n    }\n  };\n\n  Inview.defaults = {\n    context: window,\n    enabled: true,\n    enter: noop,\n    entered: noop,\n    exit: noop,\n    exited: noop\n  };\n  Waypoint.Inview = Inview;\n})();","map":null,"metadata":{},"sourceType":"script"}